{"version":3,"file":"webm.js","sourceRoot":"","sources":["../../../../../../src/nonstandard/recorder/writer/webm.ts"],"names":[],"mappings":"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","sourcesContent":["import { unlink } from \"fs/promises\";\nimport { EventDisposer } from \"rx.mini\";\n\nimport { MediaWriter } from \".\";\nimport { type MediaStreamTrack, WeriftError } from \"../../..\";\nimport {\n  DepacketizeCallback,\n  JitterBufferCallback,\n  LipsyncCallback,\n  NtpTimeCallback,\n  RtcpSourceCallback,\n  RtpSourceCallback,\n  RtpTimeCallback,\n  type SupportedCodec,\n  WebmCallback,\n  saveToFileSystem,\n} from \"../../../../../rtp/src/extra\";\n\nconst sourcePath = \"packages/webrtc/src/nonstandard/recorder/writer/webm.ts\";\n\nexport class WebmFactory extends MediaWriter {\n  rtpSources: RtpSourceCallback[] = [];\n\n  unSubscribers = new EventDisposer();\n\n  async start(tracks: MediaStreamTrack[]) {\n    if (this.props.path) {\n      await unlink(this.props.path).catch((e) => e);\n    }\n\n    const inputTracks = tracks.map((track, i) => {\n      const trackNumber = i + 1;\n      const payloadType = track.codec!.payloadType;\n\n      if (track.kind === \"video\") {\n        const codec = ((): SupportedCodec => {\n          switch (track.codec?.name.toLowerCase() as SupportedVideoCodec) {\n            case \"vp8\":\n              return \"VP8\";\n            case \"vp9\":\n              return \"VP9\";\n            case \"h264\":\n              return \"MPEG4/ISO/AVC\";\n            case \"av1x\":\n              return \"AV1\";\n            default:\n              throw new WeriftError({\n                message: \"unsupported codec\",\n                payload: { track, path: sourcePath },\n              });\n          }\n        })();\n        return {\n          kind: \"video\" as const,\n          codec,\n          clockRate: 90000,\n          trackNumber,\n          width: this.props.width ?? 640,\n          height: this.props.height ?? 360,\n          payloadType,\n          track,\n        };\n      } else {\n        return {\n          kind: \"audio\" as const,\n          codec: \"OPUS\" as const,\n          clockRate: 48000,\n          trackNumber,\n          payloadType,\n          track,\n        };\n      }\n    });\n\n    const webm = new WebmCallback(inputTracks, {\n      duration: this.props.defaultDuration ?? 1000 * 60 * 60 * 24,\n    });\n    const lipsync = new LipsyncCallback();\n\n    if (inputTracks.length === 1 || this.props.disableNtp) {\n      this.props.disableLipSync = true;\n    }\n\n    this.rtpSources = inputTracks.map(({ track, clockRate, codec }) => {\n      const rtpSource = new RtpSourceCallback();\n      const rtcpSource = new RtcpSourceCallback();\n      track.onReceiveRtp\n        .subscribe((rtp) => {\n          rtpSource.input(rtp.clone());\n        })\n        .disposer(this.unSubscribers);\n      track.onReceiveRtcp\n        .subscribe((rtcp) => {\n          rtcpSource.input(rtcp);\n        })\n        .disposer(this.unSubscribers);\n      const time = this.props.disableNtp\n        ? new RtpTimeCallback(clockRate)\n        : new NtpTimeCallback(clockRate);\n\n      if (track.kind === \"video\") {\n        const depacketizer = new DepacketizeCallback(codec, {\n          isFinalPacketInSequence: (h) => h.marker,\n        });\n        const jitterBuffer = new JitterBufferCallback(clockRate, {\n          bufferSize: this.props.jitterBufferSize,\n          latency: this.props.jitterBufferLatency,\n        });\n\n        rtpSource.pipe(jitterBuffer.input);\n        rtcpSource.pipe(time.input);\n\n        jitterBuffer.pipe(time.input);\n        time.pipe(depacketizer.input);\n        if (this.props.disableLipSync) {\n          depacketizer.pipe(webm.inputVideo);\n        } else {\n          depacketizer.pipe(lipsync.inputVideo);\n          lipsync.pipeVideo(webm.inputVideo);\n        }\n      } else {\n        const depacketizer = new DepacketizeCallback(codec);\n\n        rtpSource.pipe(time.input);\n        rtcpSource.pipe(time.input);\n\n        time.pipe(depacketizer.input);\n        if (this.props.disableLipSync) {\n          depacketizer.pipe(webm.inputAudio);\n        } else {\n          depacketizer.pipe(lipsync.inputAudio);\n          lipsync.pipeAudio(webm.inputAudio);\n        }\n      }\n\n      return rtpSource;\n    });\n    if (this.props.path) {\n      webm.pipe(saveToFileSystem(this.props.path));\n    } else if (this.props.stream) {\n      webm.pipe(async (o) => {\n        this.props.stream.execute(o);\n      });\n    }\n  }\n\n  async stop() {\n    await Promise.all(this.rtpSources.map((r) => r.stop()));\n    this.unSubscribers.dispose();\n  }\n}\n\nconst supportedVideoCodecs = [\"h264\", \"vp8\", \"vp9\", \"av1x\"] as const;\ntype SupportedVideoCodec = (typeof supportedVideoCodecs)[number];\n"]}