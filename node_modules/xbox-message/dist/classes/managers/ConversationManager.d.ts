import { Collection } from '@discordjs/collection';
import { ConversationType, XboxMessage } from '../..';
import { BaseConversation } from '../Conversation/BaseConversation';
import { GroupConversation, GroupConversationData } from '../Conversation/GroupConversation';
import { OneToOneConversation, OneToOneConversationData } from '../Conversation/OneToOneConversation';
export type Conversation = BaseConversation | OneToOneConversation | GroupConversation;
export declare class ConversationManager {
    client: XboxMessage;
    cache: Collection<string, Conversation>;
    constructor(client: XboxMessage);
    fetch(id: string, type: ConversationType): Promise<Conversation | null>;
    add(data: OneToOneConversationData | GroupConversationData, cache?: boolean, { id }?: {
        id?: string;
    }): Conversation;
}
