"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessagePayload = void 0;
const axios_1 = __importDefault(require("axios"));
class MessagePayload {
    constructor(client, options) {
        this.client = client;
        this.options = options;
        this.body = null;
    }
    parseContent(input) {
        const urlPattern = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/g;
        const parts = [];
        let match;
        let lastIndex = 0;
        while ((match = urlPattern.exec(input)) !== null) {
            if (match.index > lastIndex) {
                parts.push({
                    contentType: 'text',
                    version: 0,
                    text: input.slice(lastIndex, match.index),
                });
            }
            parts.push({
                contentType: 'weblink',
                version: 1,
                text: match[0],
            });
            lastIndex = urlPattern.lastIndex;
        }
        if (lastIndex < input.length) {
            parts.push({
                contentType: 'text',
                version: 0,
                text: input.slice(lastIndex),
            });
        }
        return { parts };
    }
    resolveParts() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.body)
                return this;
            const parts = new Array();
            if (this.options.content) {
                const { parts: contentParts } = this.parseContent(this.options.content);
                parts.push(...contentParts);
            }
            if (this.options.attachment) {
                const attachment = yield this.resolveFile(this.options.attachment);
                parts.push(attachment);
            }
            this.body = { parts };
            return this;
        });
    }
    resolveFile(resource) {
        return __awaiter(this, void 0, void 0, function* () {
            const { uploadUri, attachmentId } = yield this.client.rest.getUploadUrl(resource.fileType);
            const upload = yield (0, axios_1.default)(uploadUri, {
                method: 'PUT',
                data: resource.data,
                headers: {
                    'x-ms-blob-type': 'BlockBlob',
                    'x-xbl-contract-version': '3',
                    'Content-Type': 'application/octet-stream',
                },
            });
            return {
                contentType: 'image',
                version: 0,
                attachmentId,
                filetype: resource.fileType,
                sizeInBytes: resource.data.byteLength,
                hash: upload.headers['content-md5'],
                height: 88,
                width: 88,
            };
        });
    }
    static create(target, options) {
        return new this(target, typeof options !== 'object' || options === null ? { content: options } : Object.assign({}, options));
    }
}
exports.MessagePayload = MessagePayload;
