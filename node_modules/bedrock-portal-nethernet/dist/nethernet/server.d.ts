import { Connection } from './connection';
import { Signal } from '../signaling/signal';
import { SignalStructure } from '../signaling/struct';
export declare class Server {
    networkId: bigint;
    connectionId: bigint;
    signaling: Signal;
    connections: Map<bigint, Connection>;
    onOpenConnection: (conn: Connection) => void;
    onCloseConnection: (id: bigint, reason: string) => void;
    onEncapsulated: (packet: Buffer, id: bigint) => void;
    constructor(signaling: Signal, networkId?: bigint, connectionId?: bigint);
    handleCandidate(signal: SignalStructure): Promise<void>;
    handleOffer(signal: SignalStructure): Promise<void>;
    listen(): Promise<void>;
    close(): void;
}
