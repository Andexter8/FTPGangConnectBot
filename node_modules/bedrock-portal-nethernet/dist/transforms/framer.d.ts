import { Player } from '../serverPlayer';
export declare enum CompressionAlgorithm {
    None = "none",
    Deflate = "deflate",
    Snappy = "snappy"
}
export declare class Framer {
    packets: Buffer[];
    batchHeader: number[];
    compressor: CompressionAlgorithm;
    compressionLevel: number;
    compressionThreshold: number;
    compressionHeader: number;
    writeCompressor: boolean;
    constructor(client: Player);
    compress(buffer: Buffer): Buffer<ArrayBufferLike>;
    static decompress(algorithm: number | string, buffer: Buffer): Buffer<ArrayBufferLike>;
    static decode(client: Player, buf: Buffer): Buffer<ArrayBuffer>[];
    encode(): Buffer<ArrayBuffer>;
    addEncodedPacket(chunk: Buffer): void;
    addEncodedPackets(packets: Buffer[]): void;
    getBuffer(): Buffer<ArrayBuffer>;
    static getPackets(buffer: Buffer): Buffer<ArrayBuffer>[];
}
